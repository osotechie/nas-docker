services: 

  Autogen-Studio:
    container_name: autogen
    hostname: autogen
    image: ghcr.io/lludlow/autogen-studio
    restart: always
    networks:
      ai:
    environment:
      - AUTOGEN_HOST=0.0.0.0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    labels:
    # Traefik - Service
    - traefik.enable=true
    - traefik.http.services.autogen.loadbalancer.server.port=8081
    # Traefik - Router - HTTPS
    - traefik.http.routers.autogen.rule=Host(`autogen.${DOMAIN}`)
    - traefik.http.routers.autogen.entryPoints=websecure
    - traefik.http.routers.autogen.middlewares=Real-IP@file, Headers@file

  Ollama:
    container_name: ollama
    hostname: ollama
    image: ollama/ollama
    restart: always
    networks:
      ai:
    labels:
    # Traefik - Service
    - traefik.enable=false

  Open-WebUI:
    container_name: open-webui
    hostname: open-webui
    image: ghcr.io/open-webui/open-webui:latest
    restart: always
    networks:
      ai:
    volumes:
      - ${DOCKERDIR}/open-webui:/app/backend/data
    labels:
    # Traefik - Service
    - traefik.enable=true
    - traefik.http.services.openwebui.loadbalancer.server.port=8080
    # Traefik - Router - HTTPS
    - traefik.http.routers.openwebui.rule=Host(`ai.${DOMAIN}`)
    - traefik.http.routers.openwebui.entryPoints=websecure
    - traefik.http.routers.openwebui.middlewares=Real-IP@file, Headers@file

  LiteLLM:
    container_name: litellm
    hostname: litellm
    image: ghcr.io/berriai/litellm:main-latest
    restart: always
    networks:
      ai:
    volumes:
      - ${DOCKERDIR}/litellm/config.yaml:/app/config.yaml
    environment:
      LITELLM_MASTER_KEY: ${LITELLM_MASTER_KEY}
    labels:
    # Traefik - Service
    - traefik.enable=true
    - traefik.http.services.litellm.loadbalancer.server.port=4000
    # Traefik - Router - HTTPS
    - traefik.http.routers.litellm.rule=Host(`litellm.${DOMAIN}`)
    - traefik.http.routers.litellm.entryPoints=websecure
    - traefik.http.routers.litellm.middlewares=Real-IP@file, Headers@file



#Shared Networks between containers
networks:
  #Internal Docker Networks
  ai:
    name: ai
    
